// Generated by view binder compiler. Do not edit!
package com.example.shopapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shopapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCartBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton buttonDecrease;

  @NonNull
  public final ImageButton buttonIncrease;

  @NonNull
  public final ImageButton buttonRemove;

  @NonNull
  public final ImageView imageProduct;

  @NonNull
  public final TextView textProductName;

  @NonNull
  public final TextView textProductPrice;

  @NonNull
  public final TextView textQuantity;

  private ItemCartBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton buttonDecrease,
      @NonNull ImageButton buttonIncrease, @NonNull ImageButton buttonRemove,
      @NonNull ImageView imageProduct, @NonNull TextView textProductName,
      @NonNull TextView textProductPrice, @NonNull TextView textQuantity) {
    this.rootView = rootView;
    this.buttonDecrease = buttonDecrease;
    this.buttonIncrease = buttonIncrease;
    this.buttonRemove = buttonRemove;
    this.imageProduct = imageProduct;
    this.textProductName = textProductName;
    this.textProductPrice = textProductPrice;
    this.textQuantity = textQuantity;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_decrease;
      ImageButton buttonDecrease = ViewBindings.findChildViewById(rootView, id);
      if (buttonDecrease == null) {
        break missingId;
      }

      id = R.id.button_increase;
      ImageButton buttonIncrease = ViewBindings.findChildViewById(rootView, id);
      if (buttonIncrease == null) {
        break missingId;
      }

      id = R.id.button_remove;
      ImageButton buttonRemove = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemove == null) {
        break missingId;
      }

      id = R.id.image_product;
      ImageView imageProduct = ViewBindings.findChildViewById(rootView, id);
      if (imageProduct == null) {
        break missingId;
      }

      id = R.id.text_product_name;
      TextView textProductName = ViewBindings.findChildViewById(rootView, id);
      if (textProductName == null) {
        break missingId;
      }

      id = R.id.text_product_price;
      TextView textProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (textProductPrice == null) {
        break missingId;
      }

      id = R.id.text_quantity;
      TextView textQuantity = ViewBindings.findChildViewById(rootView, id);
      if (textQuantity == null) {
        break missingId;
      }

      return new ItemCartBinding((MaterialCardView) rootView, buttonDecrease, buttonIncrease,
          buttonRemove, imageProduct, textProductName, textProductPrice, textQuantity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

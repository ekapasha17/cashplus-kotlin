// Generated by view binder compiler. Do not edit!
package com.example.shopapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shopapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCartBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonCheckout;

  @NonNull
  public final ConstraintLayout layoutCartSummary;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView textEmptyCart;

  @NonNull
  public final TextView textTotal;

  @NonNull
  public final TextView textTotalLabel;

  @NonNull
  public final Toolbar toolbar;

  private FragmentCartBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonCheckout,
      @NonNull ConstraintLayout layoutCartSummary, @NonNull RecyclerView recyclerView,
      @NonNull TextView textEmptyCart, @NonNull TextView textTotal,
      @NonNull TextView textTotalLabel, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonCheckout = buttonCheckout;
    this.layoutCartSummary = layoutCartSummary;
    this.recyclerView = recyclerView;
    this.textEmptyCart = textEmptyCart;
    this.textTotal = textTotal;
    this.textTotalLabel = textTotalLabel;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_checkout;
      Button buttonCheckout = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheckout == null) {
        break missingId;
      }

      id = R.id.layout_cart_summary;
      ConstraintLayout layoutCartSummary = ViewBindings.findChildViewById(rootView, id);
      if (layoutCartSummary == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.text_empty_cart;
      TextView textEmptyCart = ViewBindings.findChildViewById(rootView, id);
      if (textEmptyCart == null) {
        break missingId;
      }

      id = R.id.text_total;
      TextView textTotal = ViewBindings.findChildViewById(rootView, id);
      if (textTotal == null) {
        break missingId;
      }

      id = R.id.text_total_label;
      TextView textTotalLabel = ViewBindings.findChildViewById(rootView, id);
      if (textTotalLabel == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentCartBinding((ConstraintLayout) rootView, buttonCheckout, layoutCartSummary,
          recyclerView, textEmptyCart, textTotal, textTotalLabel, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
